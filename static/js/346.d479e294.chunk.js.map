{"version":3,"file":"static/js/346.d479e294.chunk.js","mappings":"0SAUe,SAASA,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC5C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGACyBC,EAAAA,EAAAA,IAAaL,GADtC,uBACUM,EADV,EACUA,KACRH,EAAUG,EAAKC,MAFjB,kBAGSD,GAHT,4CADc,uBAAC,WAAD,wBAMdE,EACD,GAAE,CAACR,IAqCJ,OACE,iBAAKS,UAAU,MAAf,WACE,wBAAKV,KACL,gBAAKU,UAAU,gBAAf,UACE,SAAC,KAAD,kBAvCW,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,EAChBH,UAAU,EACVD,MAAM,IAGV,CACEO,WAAY,IACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,EAChBC,aAAc,IAGlB,CACEE,WAAY,IACZC,SAAU,CACRL,aAAc,EACdC,eAAgB,OAUlB,oBACGZ,QADH,IACGA,OADH,EACGA,EAAQiB,KAAI,SAAAC,GAAK,OAChB,UAAC,KAAD,CACEX,UAAS,uCAITY,GAAE,iBAAYD,EAAME,IACpB,eAAa,OANf,WAQE,gBACEb,UAAU,UACVc,IAAG,UAjEL,uCAiEK,OAAgBH,EAAMI,cACzBC,IAAKL,EAAMM,MAAQN,EAAMO,iBAG3B,cAAGlB,UAAU,kBAAb,SACGW,EAAMM,MAAQN,EAAMO,kBAXlBP,EAAMQ,QALG,WAyB3B,C,uBClFc,SAASC,IACtB,IACMC,GADSC,EAAAA,EAAAA,MACQD,QAUvB,OACE,SAAC,EAAD,CAAc/B,MAAM,QAAQC,SAAUgC,EAAAA,EAAAA,WAAoBF,IAyB7D,C,2BCzCKzB,E,QAAW4B,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CAAEC,QAAS,sCAGrB,K,sDCPO,IAAMJ,EAAW,CACtBK,mBAAmB,4CACnBC,mBAAmB,8BACnBC,WAAW,6BACXC,cAAc,uBACdC,gBAAgB,yCAChBC,cAAc,wCACdC,kBAAkB,oCAClBC,mBAAmB,sBACnBC,YAAa,SAAAC,GAAQ,uBAAcA,EAAd,cAErBC,aAAc,SAAAD,GAAQ,sBAAaA,EAAb,oCACtBE,iBAAkB,SAAAF,GAAQ,uBAAcA,EAAd,MAC1BG,iBAAkB,SAAAvB,GAAI,oCAA2BA,EAA3B,aACtBwB,WAAY,SAAAJ,GAAQ,uBAAcA,EAAd,cACpBK,WAAY,SAAAC,GAAS,wBAAeA,EAAf,M","sources":["components/ActorsSlider/ActorsSlider.jsx","components/Casts/Casts.jsx","helpers/axios.js","helpers/reqwest.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../../../node_modules/slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Link } from 'react-router-dom';\nimport instance from 'helpers/axios';\nimport './ActorsSlider.css';\nimport Slider from 'react-slick';\n\nconst BASE_URL = `https://image.tmdb.org/t/p/original`;\n\nexport default function ActorsSlider({ title, fetchURL }) {\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const { data } = await instance.get(fetchURL);\n      setActors(data.cast);\n      return data;\n    }\n    fetchData();\n  }, [fetchURL]);\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 7,\n    slidesToScroll: 4,\n    initialSlide: 0,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 7,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 7,\n          slidesToScroll: 2,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"sliderWrapper\">\n        <Slider {...settings}>\n          {actors?.map(movie => (\n            <Link\n              className={`row_poster row_poster_large row_link`}\n              // state={{ from: location }}\n              // тут створили сткйт і прив'язали адресу з якої прийшли\n              key={movie.cast_id}\n              to={`/actor/${movie.id}`}\n              aria-current=\"true\"\n            >\n              <img\n                className=\"row_img\"\n                src={`${BASE_URL}${movie.profile_path}`}\n                alt={movie.name || movie.original_name}\n              />\n              {/* <div className=\"row_description_wraper\"> */}\n              <p className=\"row_description\">\n                {movie.name || movie.original_name}\n              </p>\n              {/* </div> */}\n            </Link>\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n}\n","import ActorsSlider from 'components/ActorsSlider/ActorsSlider';\nimport { reqwests } from 'helpers/reqwest';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Casts() {\n  const params = useParams();\n  const movieId = params.movieId;\n\n  // useEffect(() => {\n  //   async function getCastsApi() {\n  //     const data = await getCasts(movieId);\n  //     setCasts(data);\n  //   }\n  //   getCastsApi();\n  // }, [movieId]);\n\n  return (\n    <ActorsSlider title=\"Casts\" fetchURL={reqwests.fetchCasts(movieId)} />\n    // casts &&\n    // casts.cast.map(({ character, name, profile_path, id }) => (\n    //   <div key={id} className=\"card d-flex flex-row p-2\">\n    //     <img\n    //       src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n    //       className=\"card-img-top w-25 \"\n    //       alt={`${name}`}\n    //     />\n    //     <div className=\"card-body\">\n    //       <p className=\"card-text\">{`Name ${name}`}</p>\n    //       <p className=\"card-text\">{`Character ${character}`}</p>\n    //       {\n    //         <Link\n    //           to={`/actor/${id}`}\n    //           className=\"btn btn-primary\"\n    //           state={{ from: location }}\n    //         >\n    //           Find more...\n    //         </Link>\n    //       }\n    //     </div>\n    //   </div>\n    // ))\n  );\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: '08cfb1cba341ef968995af439d190569' },\n});\n\nexport default instance;\n","export const reqwests = {\n  fetchLoginWithPass: `/authentication/token/validate_with_login`,\n  fetchCreateSession: `authentication/session/new?`,\n  fetchToken: `/authentication/token/new?`,\n  fetchTrending: `/trending/movie/day?`,\n  fetchTopRaiting: `movie/top_rated?&language=en-US&page=1`,\n  fetchUpcoming: `movie/upcoming?&language=en-US&page=1`,\n  fetchGuestSession: `/authentication/guest_session/new`,\n  fetchAddToFavorete: `/account/q/favorite`,\n  fetchReview: movie_id => `/movie/${movie_id}/reviews?`,\n\n  fetchSimilar: movie_id => `movie/${movie_id}/similar?&language=en-US&page=1`,\n  fetchSingleMovie: movie_id => `/movie/${movie_id}?`,\n  fetchMovieByName: name => `/search/movie?query=${name}&page=1&`,\n  fetchCasts: movie_id => `/movie/${movie_id}/credits?`,\n  fetchActor: actors_id => `/person/${actors_id}?`,\n};\n"],"names":["ActorsSlider","title","fetchURL","useState","actors","setActors","useEffect","instance","data","cast","fetchData","className","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","map","movie","to","id","src","profile_path","alt","name","original_name","cast_id","Casts","movieId","useParams","reqwests","axios","baseURL","params","api_key","fetchLoginWithPass","fetchCreateSession","fetchToken","fetchTrending","fetchTopRaiting","fetchUpcoming","fetchGuestSession","fetchAddToFavorete","fetchReview","movie_id","fetchSimilar","fetchSingleMovie","fetchMovieByName","fetchCasts","fetchActor","actors_id"],"sourceRoot":""}